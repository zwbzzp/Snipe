"""init

Revision ID: 30a6e384c345
Revises: None
Create Date: 2016-06-03 16:35:12.823290

"""

# revision identifiers, used by Alembic.
revision = '30a6e384c345'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('celery_crontabs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('minute', sa.String(length=64), nullable=True),
    sa.Column('hour', sa.String(length=64), nullable=True),
    sa.Column('day_of_week', sa.String(length=64), nullable=True),
    sa.Column('day_of_month', sa.String(length=64), nullable=True),
    sa.Column('month_of_year', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('celery_intervals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('every', sa.Integer(), nullable=False),
    sa.Column('period', sa.String(length=24), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('desktop_task_extra',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('desktop_name', sa.String(length=64), nullable=True),
    sa.Column('image_ref', sa.String(length=64), nullable=True),
    sa.Column('flavor_ref', sa.String(length=64), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('desktop_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('action', sa.String(length=16), nullable=True),
    sa.Column('state', sa.String(length=16), nullable=True),
    sa.Column('result', sa.String(length=16), nullable=True),
    sa.Column('stage', sa.String(length=64), nullable=True),
    sa.Column('stage_chain', sa.Text(), nullable=True),
    sa.Column('retries', sa.Integer(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('context', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_desktop_tasks_action'), 'desktop_tasks', ['action'], unique=False)
    op.create_index(op.f('ix_desktop_tasks_result'), 'desktop_tasks', ['result'], unique=False)
    op.create_index(op.f('ix_desktop_tasks_state'), 'desktop_tasks', ['state'], unique=False)
    op.create_table('flavors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('ref_id', sa.String(length=64), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('ref_id', sa.String(length=64), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('instances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('vmid', sa.String(length=64), nullable=True),
    sa.Column('image', sa.String(length=64), nullable=True),
    sa.Column('flavor', sa.String(length=64), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('ip', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('log_systemrunning',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(length=20), nullable=True),
    sa.Column('message', sa.String(length=1024), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('param_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('places',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('address', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('protocols',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('permissions', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('samba_servers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('ip', sa.String(length=20), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('administrator', sa.String(length=64), nullable=True),
    sa.Column('password', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('celery_schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('task', sa.String(length=255), nullable=True),
    sa.Column('interval_id', sa.Integer(), nullable=True),
    sa.Column('crontab_id', sa.Integer(), nullable=True),
    sa.Column('arguments', sa.String(length=255), nullable=True),
    sa.Column('keyword_arguments', sa.String(length=255), nullable=True),
    sa.Column('queue', sa.String(length=255), nullable=True),
    sa.Column('exchange', sa.String(length=255), nullable=True),
    sa.Column('routing_key', sa.String(length=255), nullable=True),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('last_run_at', sa.DateTime(), nullable=True),
    sa.Column('total_run_count', sa.Integer(), nullable=True),
    sa.Column('date_changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['crontab_id'], ['celery_crontabs.id'], ),
    sa.ForeignKeyConstraint(['interval_id'], ['celery_intervals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('value', sa.String(length=64), nullable=True),
    sa.Column('type', sa.String(length=64), nullable=True),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['param_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_parameters_name'), 'parameters', ['name'], unique=True)
    op.create_table('stage_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('stage', sa.String(length=64), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('detail', sa.String(length=5000), nullable=True),
    sa.Column('context', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['desktop_tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('fullname', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('image_ref', sa.String(length=64), nullable=True),
    sa.Column('flavor_ref', sa.String(length=64), nullable=True),
    sa.Column('network_ref', sa.String(length=64), nullable=True),
    sa.Column('protocol', sa.String(length=64), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ftp_servers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('ip', sa.String(length=20), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('log_useraction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userid', sa.String(length=64), nullable=True),
    sa.Column('level', sa.String(length=20), nullable=True),
    sa.Column('message', sa.String(length=1024), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['userid'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('samba_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('samba_server_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('password', sa.String(length=64), nullable=True),
    sa.Column('quota', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['samba_server_id'], ['samba_servers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_place',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('place_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['place_id'], ['places.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('course_id', 'place_id')
    )
    op.create_table('course_selections',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('course_id', 'user_id')
    )
    op.create_table('desktops',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('vm_ref', sa.String(length=64), nullable=True),
    sa.Column('vm_state', sa.String(length=64), nullable=True),
    sa.Column('os_state', sa.String(length=64), nullable=True),
    sa.Column('desktop_state', sa.String(length=16), nullable=True),
    sa.Column('desktop_type', sa.String(length=16), nullable=True),
    sa.Column('floating_ip', sa.String(length=64), nullable=True),
    sa.Column('fixed_ip', sa.String(length=64), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('need_floating', sa.Boolean(), nullable=True),
    sa.Column('start_datetime', sa.DateTime(), nullable=True),
    sa.Column('end_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_desktops_desktop_state'), 'desktops', ['desktop_state'], unique=False)
    op.create_index(op.f('ix_desktops_need_floating'), 'desktops', ['need_floating'], unique=False)
    op.create_index(op.f('ix_desktops_os_state'), 'desktops', ['os_state'], unique=False)
    op.create_index(op.f('ix_desktops_vm_state'), 'desktops', ['vm_state'], unique=False)
    op.create_table('ftp_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('ftp_server_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('password', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['ftp_server_id'], ['ftp_servers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lessons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('start_period_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('end_period_id', sa.Integer(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.Column('scheduled', sa.Boolean(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('started', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['end_period_id'], ['periods.id'], ),
    sa.ForeignKeyConstraint(['start_period_id'], ['periods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lessons_end_date'), 'lessons', ['end_date'], unique=False)
    op.create_index(op.f('ix_lessons_scheduled'), 'lessons', ['scheduled'], unique=False)
    op.create_index(op.f('ix_lessons_start_date'), 'lessons', ['start_date'], unique=False)
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_lessons_start_date'), table_name='lessons')
    op.drop_index(op.f('ix_lessons_scheduled'), table_name='lessons')
    op.drop_index(op.f('ix_lessons_end_date'), table_name='lessons')
    op.drop_table('lessons')
    op.drop_table('ftp_accounts')
    op.drop_index(op.f('ix_desktops_vm_state'), table_name='desktops')
    op.drop_index(op.f('ix_desktops_os_state'), table_name='desktops')
    op.drop_index(op.f('ix_desktops_need_floating'), table_name='desktops')
    op.drop_index(op.f('ix_desktops_desktop_state'), table_name='desktops')
    op.drop_table('desktops')
    op.drop_table('course_selections')
    op.drop_table('course_place')
    op.drop_table('samba_accounts')
    op.drop_table('log_useraction')
    op.drop_table('ftp_servers')
    op.drop_table('courses')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('stage_results')
    op.drop_index(op.f('ix_parameters_name'), table_name='parameters')
    op.drop_table('parameters')
    op.drop_table('celery_schedules')
    op.drop_table('samba_servers')
    op.drop_table('roles')
    op.drop_table('protocols')
    op.drop_table('pools')
    op.drop_table('places')
    op.drop_table('periods')
    op.drop_table('param_groups')
    op.drop_table('log_systemrunning')
    op.drop_table('instances')
    op.drop_table('images')
    op.drop_table('flavors')
    op.drop_index(op.f('ix_desktop_tasks_state'), table_name='desktop_tasks')
    op.drop_index(op.f('ix_desktop_tasks_result'), table_name='desktop_tasks')
    op.drop_index(op.f('ix_desktop_tasks_action'), table_name='desktop_tasks')
    op.drop_table('desktop_tasks')
    op.drop_table('desktop_task_extra')
    op.drop_table('celery_intervals')
    op.drop_table('celery_crontabs')
    ### end Alembic commands ###
