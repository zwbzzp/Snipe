终端管理模块
=================================

目标使用者：管理员

主要功能
------
1. 课室/终端组的CURD操作
2. 终端注册申请的CURD操作
3. 提供客户端注册终端的API接口

核心数据模型
----------------------------------

课室 Place ::

    name    课室名称
    address 课室地址

终端 Terminal ::

    place_id            教室id
    terminal_user_id    终端用户id

    mac_address         终端MAC地址
    seat_number         座位号
    description         终端描述
    info                更多信息: json字符串，保存mac_address, place_id等信息
    state               终端申请状态：“审批通过”、“等待审批”、“审批不通过”


终端用户 TerminalUser （在创建终端对象时同步创建，一对一） ::

    username      用户名，默认格式("教室名称" + "_" + "座位号")
    password      密码，默认为该终端的MAC地址


URL 列表
------

**url前缀: /terminal**

* 管理系统

``/places``         课室列表 GET

``/places``         创建课室 POST

``/places``         删除课室 DELETE

``/places/<id>``        更新课室信息 PUT

``/registration``       终端申请的CURD GET POST PUT DELETE

``/registration/approval``      设置终端通过审批 PUT

``/registration/rejection``     设置终端通过审批 PUT

* 客户端api

``/client/places``      获取教室列表 GET

``/client/register``        终端注册 POST

功能详述
==========
1. 课室/终端组
-----------

- 常规的CURD
- 在删除课室时，若存在某课程使用了该课室，那么将不允许删除

2. 终端列表
-----------

终端申请管理页面共有3个tab，分别为：

- 已注册：已经审核通过的终端列表，可以对该列表的条目进行删除和修改(未实现)
- 注册申请：已经提交申请，但仍未审核的终端列表。可以对该列表的条目进行审批（通过或拒绝）
- 已拒绝：审批被拒绝的终端列表，可以对该列表的条目进行重新通过审批或者删除

若存在未审批的注册申请，tab名称会有醒目的小红点提示管理员尽快进行审批

3. 终端申请
-----------

* 可以通过两种方式来提交终端申请
- 在管理系统中填写表单，该注册按钮在“已注册”tab中的工具栏，填写相应信息即可
- 通过客户端api提交申请，方法如下：

    1. 先使用 ``/client/places`` 获取课室列表，返回数据如下 ::

        {
            "data": [{
                    "id": 1,
                    "name": "B101"
                }, ...
            ]
        }

    2. 获取课室列表后，使用POST form方式调用 ``/client/register`` 接口，需要提供字段有
        - mac_address
        - description
        - place_id
        - seat_number

* 提交数据合法性校验
    除数据格式校验之外，目前只检查是否存在MAC地址冲突


4. 系统设置（未实现）
---------

在系统设置中增添一个选项，帮助管理员对审批进行自动化批量处理，选项如下：

- 对于新申请，默认通过审批
- 对于新申请，默认拒绝审批
- 对于新申请，进行手动审批


已知问题、扩展
---------------------------------

添加课室工作量较大，可以考虑增加从文件导入课室列表功能
