终端管理模块
=================================


概述
---------------------------------
资源限制模块用于集中控制管理系统对系统虚拟资源（vcpu，内存，存储）的并发使用，即对超出系统预设资源上限的资源使用予以阻止，以保证系统的正常运行。


主要功能
---------------------------------

资源限制模块主要功能如下 ::

    * 限制虚拟资源在未来某个时段的创建，使得虚拟资源在未来某个时段内的创建不会超过系统预设上限

    * 限制现有资源的使用，使得现时刻虚拟资源的使用不会超过系统预设的上限

资源限制模块的设计
---------------------------------

限制虚拟资源的种类 ::

    资源限制模块将对如下种类的资源使用进行控制

    1. vcpu(个)

        控制系统中并发vcpu的个数总数不能超过系统预设的最大并发vcpu个数

    2. 内存(GB)

        控制系统的总内存使用数(GB)不能超过系统预设的最大内存使用数(GB)

    3. 存储(GB)

        控制系统的总存储使用数(GB)不能超过系统预设的最大存储使用数(GB)

    4. 虚拟桌面数(个)

        控制系统的并发虚拟桌面数不能超过系统预设的最大并发虚拟桌面数

限制虚拟资源在未来某个时段的使用 ::

    * 使用场合

        限制虚拟资源在未来某个时间段的使用，需要从控制课时的创建入手。课时是课程调度的时间表，限制用户对课时的创建，即可以限制虚拟资源在未来某个时段的使用。
        有一些操作会直接或间接地对课时进行创建和修改，所以需要对这些操作进行审计和限制，如下

            * 添加课时

                创建课程和编辑课程时可以添加课时，这时需要对将要添加的课时进行资源审计

            * 延时课程

                延时课程会对现在正在上课课时的结束时间进行修改，需要对延长出来的课时进行审计，即原定结束时间至延迟后的结束时间的时间段

            * 手动启动课程

                手动启动，本质上是添加新课时

            * 更新课程

                需要审计的更新项为课程容量和虚拟桌面配置，需要对更新后课程的所有课时进行审计，所有课时均需要通过审计

            * 补充桌面

                本质上也是添加新课时，即添加的新课时与原有课时一样，但桌面数量为用户所补充的桌面数量

    * 提供的参数

        限制虚拟资源在未来某个时段的创建，需要用户提供如下参数，然后系统会计算用户需要创建的资源在用户提供的时间段内是否会超出系统预设上限
            1. 时间段的开始时间和结束时间

            2. 将要在未来某个时段创建的资源数量

    * 工作流程

        用户发出课程或桌面创建指令

        |
        |
        |

        计算出将来要被创建的课程或桌面的虚拟资源使用数量，如 vcpu 的使用数量，内存的使用 GB 数

        |
        |
        |

        将计算出来的虚拟资源使用数和使用资源将要使用的时间段作为参数传入资源限制模块

        |
        |
        |

        资源限制模块确定出需要资源审计的资源种类(vcpu,内存,磁盘,桌面数)，然后对每一资源种类进行资源审计

        |
        |
        |

        资源限制模块会对指定时间段内的每一种虚拟资源作如下计算，若通过如下公式的检验，则该种资源通过审计，否则不能通过审计

            * 虚拟资源系统上限 >= 即将创建虚拟资源数量 + 在指定时间段并发使用的虚拟资源数量

        在指定时间段并发使用的虚拟资源数量的计算需要考虑课程调度和除课程调度外的其他桌面使用情况，计算方法如下:

            1. 获取指定时间段内的所有课程，并计算这些课程使用的资源总数

                1. 与指定时间段重叠的课时有如下几类，假定用户提供的开始和结束日期分别为 start_date 和 end_date，开始和结束时间分别为 start_time 和 end_time：

                    1. 课时结束日期 > start_date and 课时开始日期 > end_date

                    2. 课时开始日期 < end_date and 课时结束日期 > start_date

                    3. 课时结束日期 == start_date and 课时开始日期 < start_date and 课时结束时间 >= start_time

                    4. 课时开始日期 == end_date and 课时结束日期 > end_date and 课时开始时间 <= end_time

                    5. 课时开始日期 == 课时结束日期 == start_date == end_date and 课时结束时间 >= start_time and 课时开始时间<= end_time

                    6. 课时开始日期 == 课时结束日期 == start_date == end_date and 课时开始时间 <= end_time and 课时结束时间 >= start_time

                2. 以课时时间段为区间，建立区间树

                3. 以所有选中课时的开始和结束日期时间为元素建立一个列表，除去重复元素，然后排序。这样得到一个所有课时时段对对指定时间段的分割

                4. 使用3步骤获得的区间分割，搜索区间树的重叠课时，计算重叠课时使用的资源。循环这个步骤，返回使用的最大资源数

            2. 获取除课程调度外的其他桌面，如固定桌面，并计算这些桌面使用的资源总数。因为固定桌面的使用没有可以预计的结束时间，
               所以假定固定桌面从创建时刻起将永久占用虚拟资源

            3. 加总 1 和 2 的结果就能获得指定时间段并发使用的虚拟资源数量

        输出两种类型的审计结果：

            1. 针对每一种虚拟资源都能通过审计，则允许虚拟资源的创建

            2. 否则，禁止虚拟资源的创建


限制正在创建的资源 ::

    * 使用场合

        对于正在被系统创建的资源进行限制，如调度系统获取到调度任务，将要创建50个虚拟桌面，这时候需要计算系统正在并发使用的虚拟资源加上这50个虚拟桌面是否超出
        了系统的预设并发上限，若超出则需要对超出部分的资源创建进行限制

    * 提供的参数

        1. 即将创建的资源数量


    * 工作流程

        调度系统即将创建若干虚拟桌面，

        |
        |
        |

        计算出将来要被创建的课程或桌面的虚拟资源使用数量，如 vcpu 的使用数量，内存的使用 GB 数

        |
        |
        |

        将计算出来的虚拟资源使用数作为参数传入资源限制模块

        |
        |
        |

        资源限制模块确定出需要资源审计的资源种类(vcpu,内存,磁盘,桌面数)，然后对每一资源种类进行资源审计

        |
        |
        |

        计算正在并发使用的资源数

        |
        |
        |

        针对每一种资源种类，计算如下公式：

            * 虚拟资源系统上限 >= 即将创建虚拟资源数量 + 正在并发使用的虚拟资源数量

            * 正在并发使用的虚拟资源数量 = 开机状态的虚拟桌面

        |
        |
        |

        输出两种类型的审计结果：

            1. 针对每一种虚拟资源都能通过审计，则允许虚拟资源的创建

            2. 否则，禁止虚拟资源的创建

核心类
---------------------------------

ResourceController ::

    资源控制器，全局只有一个资源控制器实例，用于审计虚拟资源的使用

ResourceAuditor ::

    虚拟资源审计器，每一种资源对应一种资源审计器


已知问题、扩展
---------------------------------

无
