代码风格指南
==============================

概述
------------------------------

Python 的代码风格由 PEP 8 描述。这个文档描述了 Python 编程风格的方方面面。在遵守这个文档的条件下，不同程序员编写的 Python 代码可以保持最大程度的相似风格。这样就易于阅读，易于在程序员之间交流。项目开发时代码风格参考 PEP8 的代码风格，部分重要的代码风格会在下面描述。参考链接如下 ::

    https://www.python.org/dev/peps/pep-0008/

代码布局
------------------------------

1. 缩进
    每级缩进用4个空格。

    括号中使用垂直隐式缩进或使用悬挂缩进。后者应该注意第一行要没有参数，后续行要有缩进 ::

        # 不对准左括号，但加多一层缩进，以和后面内容区别
        def long_function_name(
            var_one, var_two, var_three,
            var_four):
        print(var_one)

2. 空格
    使用空格进行缩进，不能空格和 tab 混合使用。

3. 最大行宽
    限制所有行的最大行宽为79字符。

4. 空行
    * 两行空行分割顶层函数和类的定义
    * 类的方法定义用单个空行分割
    * 额外的空行可以必要的时候在函数中用于分割不同的逻辑块

5. 源文件编码
    代码使用UTF-8

6. 导入
    * 一行只导入一个模块，如 ::

        import os
        import sys
        from subprocess import Popen, PIPE

    * 导入始终放在文件的顶部，在模块注释和文档字符串之后，在模块全局变量和常量之前。导入顺序如下：标准库,相关的第三方库，本地库。各组的导入之间要有空行。

    * 以绝对路径导入 ::

        from mypkg.sibling import example

    * 禁止使用通配符导入 ::

        from <module> import *

字符串引用
------------------------------

一般情况下使用单引号字符串

表达式和语句中的空格
------------------------------

1. 括号里面的边避免空格

2. 逗号，冒号，分号之前避免空格

3. 索引操作中的冒号当作操作符处理前后没有空格

4. 赋值等操作符前后不能因为对齐而添加多个空格

5. 二元运算符两边放置一个空格

6. 优先级高的运算符或操作符的前后没有空格

7. 关键字参数和默认值参数的前后不要加空格 ::

    # Yes
    def complex(real, imag=0.0):
        return magic(r=real, i=imag)

    # No
    def complex(real, imag = 0.0):
        return magic(r = real, i = imag)

8. 通常不推荐复合语句(Compound statements: 多条语句写在同一行)

注释
------------------------------

修改代码时要优先更新注释。如果注释很短，可以省略末尾的句号。注释块通常由一个或多个段落组成。段落由完整的句子构成且每个句子应该以点号(后面要有两个空格)结束。

1. 注释块
    注释块通常应用在代码前，并和这些代码有同样的缩进。每行以 '#' 开始。注释块内的段落用仅包含单个 '#' 的行分割 ::

        # some comment 1
        # continue some comment 1
        # continue some comment 2

2. 行内注释
    慎用行内注释，行内注释是和语句在同一行，至少用两个空格和语句分开。行内注释不是必需的，重复罗嗦会使人分心 ::

        # No
        x = x + 1 # Increment x

3. 文档字符串

    * 为所有公共模块、函数、类和方法书写文档字符串。非公开方法不一定有文档字符串，建议有注释(出现在 def 行之后)来描述这个方法做什么。

    * 注意结尾的 """ 应该单独成行，例如 ::

        """Return a foobang
        Optional plotz says to frobnicate the bizbaz first.
        """

版本标签
------------------------------
略

命名约定
------------------------------

1. 包和模块名
    模块名要简短，全部用小写字母，可使用下划线以提高可读性。包名和模块名类似，但不推荐使用下划线。

2. 类名
    首字母大写的单词串或驼峰缩写，如 ::

        MyFavouriteClass

3. 异常名
    如果是错误，需要在类名添加后缀 "Error" ::

        MyFavouriteClassError

4. 函数名
    函数名应该为小写，必要时可用下划线分隔单词以增加可读性 ::

        def my_favourite_function():
            do something here
            ...

5. 函数和方法的参数
    实例方法第一个参数是 'self'， 类方法第一个参数是 'cls'， 如果函数的参数名与保留关键字冲突，通常在参数名后加一个下划线 ::

        def my_favourite_function(class_):
            do something here
            ...

6. 方法名和实例变量
    非公开方法和实例变量增加一个前置下划线。
    类属性命名使用双下划线

7. 常量
    常量通常在模块级定义,由大写字母用下划线分隔组成。比如括 MAX_OVERFLOW 和 TOTAL

8. 继承设计
    * 公开属性应该没有前导下划线

    * 如果公开属性名和保留关键字冲突，可以添加后置下划线

    * 简单的公开数据属性，最好只公开属性名，没有复杂的访问/修改方法， python 的 Property 提供了很好的封装方法。 d.如果不希望子类使用的属性，考虑用两个前置下划线命名。

编程建议
------------------------------

1. 文件头
    python 文件以编码方式和注释等开头，例如 ::

        # -*- encoding: utf-8 -*-
        # Copyright 2016 Vinzor Co.,Ltd.
        #
        # <简单说明模块的作用>
        #
        # <更新记录>

    每条更新记录应说明时间、作者、更新的内容，如 ::

        # 20160116 fengyingcai: Create module.
